// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`non-pretty: pretty/tables-1.sql 1`] = `"CREATE TABLE public.users (id serial PRIMARY KEY, name text NOT NULL)"`;

exports[`non-pretty: pretty/tables-2.sql 1`] = `"CREATE TABLE "App"."User Data" ("User ID" uuid PRIMARY KEY, "Full Name" text NOT NULL)"`;

exports[`non-pretty: pretty/tables-3.sql 1`] = `"CREATE TABLE system.settings (setting_key text PRIMARY KEY, setting_value text, CONSTRAINT "Default Setting Check" CHECK (setting_value IS NOT NULL))"`;

exports[`non-pretty: pretty/tables-4.sql 1`] = `"CREATE TABLE "Inventory"."StockItems" ("ItemID" int PRIMARY KEY, "Tags" text[])"`;

exports[`non-pretty: pretty/tables-5.sql 1`] = `"CREATE TABLE "Orders"."OrderLines" (id serial PRIMARY KEY, order_id int, CONSTRAINT "FK Order Reference" FOREIGN KEY (order_id) REFERENCES "Orders"."Order" ("OrderID"))"`;

exports[`non-pretty: pretty/tables-6.sql 1`] = `"CREATE TABLE contact_info (id int PRIMARY KEY, location address)"`;

exports[`non-pretty: pretty/tables-7.sql 1`] = `"CREATE TABLE "Archive"."OldUsers" (archived_at timestamptz DEFAULT now()) INHERITS ("Users"."User Data")"`;

exports[`non-pretty: pretty/tables-8.sql 1`] = `"CREATE TABLE logging.audit_trail (log_id int GENERATED BY DEFAULT AS IDENTITY, message text, CONSTRAINT "PK_Audit" PRIMARY KEY (log_id))"`;

exports[`non-pretty: pretty/tables-9.sql 1`] = `"CREATE TABLE finance.transactions (amount numeric, tax_rate numeric, total numeric GENERATED ALWAYS AS (amount * (1 + tax_rate)) STORED)"`;

exports[`non-pretty: pretty/tables-10.sql 1`] = `"CREATE TABLE metrics.monthly_stats (stat_id serial, recorded_at date) PARTITION BY RANGE (recorded_at)"`;

exports[`non-pretty: pretty/tables-11.sql 1`] = `"CREATE TABLE school.attendance ("Student ID" uuid, "Class ID" uuid, attended_on date DEFAULT CURRENT_DATE, PRIMARY KEY ("Student ID", "Class ID"))"`;

exports[`non-pretty: pretty/tables-12.sql 1`] = `"CREATE TABLE secure.sessions (session_id uuid PRIMARY KEY, user_id uuid, CONSTRAINT "fk-user->session" FOREIGN KEY (user_id) REFERENCES users (id))"`;

exports[`non-pretty: pretty/tables-13.sql 1`] = `"CREATE TABLE public."API Keys" ("KeyID" uuid PRIMARY KEY, "ClientName" text, "KeyValue" text UNIQUE, CONSTRAINT "Unique_ClientName" UNIQUE ("ClientName"))"`;

exports[`non-pretty: pretty/tables-14.sql 1`] = `"CREATE TABLE alerts (alert_id serial PRIMARY KEY, level "AlertLevel" NOT NULL)"`;

exports[`non-pretty: pretty/tables-15.sql 1`] = `"CREATE TABLE "Billing"."Invoices" (invoice_id uuid PRIMARY KEY, "Client ID" uuid, CONSTRAINT "FK_Client" FOREIGN KEY ("Client ID") REFERENCES "Clients"."ClientBase" ("Client ID"))"`;

exports[`non-pretty: pretty/tables-16.sql 1`] = `"CREATE TABLE media.assets (id uuid PRIMARY KEY, url text, CONSTRAINT "Check-URL-NonEmpty" CHECK (url <> ''))"`;

exports[`non-pretty: pretty/tables-17.sql 1`] = `"CREATE TABLE data.snapshots (id serial PRIMARY KEY, metadata jsonb, context address)"`;

exports[`non-pretty: pretty/tables-18.sql 1`] = `"CREATE TABLE "x-Schema"."z-Table" ("Z-ID" int PRIMARY KEY, "Z-Name" text, CONSTRAINT "z-Name-Check" CHECK ("Z-Name" ~ '^[A-Z]'))"`;

exports[`non-pretty: pretty/tables-19.sql 1`] = `"CREATE TABLE users.details (first_name text NOT NULL, last_name text, CONSTRAINT first_name_required CHECK (first_name <> ''))"`;

exports[`non-pretty: pretty/tables-20.sql 1`] = `"CREATE TABLE "Calculated"."Metrics" (base int, adjustment int DEFAULT 0, "Total" int GENERATED ALWAYS AS (base + adjustment) STORED)"`;

exports[`pretty: pretty/tables-1.sql 1`] = `
"CREATE TABLE public.users (
  id serial PRIMARY KEY,
  name text NOT NULL
)"
`;

exports[`pretty: pretty/tables-2.sql 1`] = `
"CREATE TABLE "App"."User Data" (
  "User ID" uuid PRIMARY KEY,
  "Full Name" text NOT NULL
)"
`;

exports[`pretty: pretty/tables-3.sql 1`] = `
"CREATE TABLE system.settings (
  setting_key text PRIMARY KEY,
  setting_value text,
  CONSTRAINT "Default Setting Check" 
    CHECK (setting_value IS NOT NULL)
)"
`;

exports[`pretty: pretty/tables-4.sql 1`] = `
"CREATE TABLE "Inventory"."StockItems" (
  "ItemID" int PRIMARY KEY,
  "Tags" text[]
)"
`;

exports[`pretty: pretty/tables-5.sql 1`] = `
"CREATE TABLE "Orders"."OrderLines" (
  id serial PRIMARY KEY,
  order_id int,
  CONSTRAINT "FK Order Reference"
    FOREIGN KEY(order_id)
    REFERENCES "Orders"."Order" ("OrderID")
)"
`;

exports[`pretty: pretty/tables-6.sql 1`] = `
"CREATE TABLE contact_info (
  id int PRIMARY KEY,
  location address
)"
`;

exports[`pretty: pretty/tables-7.sql 1`] = `
"CREATE TABLE "Archive"."OldUsers" (
  archived_at timestamptz DEFAULT now()
) INHERITS ("Users"."User Data")"
`;

exports[`pretty: pretty/tables-8.sql 1`] = `
"CREATE TABLE logging.audit_trail (
  log_id int GENERATED BY DEFAULT AS IDENTITY,
  message text,
  CONSTRAINT "PK_Audit" PRIMARY KEY (log_id)
)"
`;

exports[`pretty: pretty/tables-9.sql 1`] = `
"CREATE TABLE finance.transactions (
  amount numeric,
  tax_rate numeric,
  total numeric GENERATED ALWAYS AS (amount * (1 + tax_rate)) STORED
)"
`;

exports[`pretty: pretty/tables-10.sql 1`] = `
"CREATE TABLE metrics.monthly_stats (
  stat_id serial,
  recorded_at date
) PARTITION BY RANGE (recorded_at)"
`;

exports[`pretty: pretty/tables-11.sql 1`] = `
"CREATE TABLE school.attendance (
  "Student ID" uuid,
  "Class ID" uuid,
  attended_on date DEFAULT CURRENT_DATE,
  PRIMARY KEY ("Student ID", "Class ID")
)"
`;

exports[`pretty: pretty/tables-12.sql 1`] = `
"CREATE TABLE secure.sessions (
  session_id uuid PRIMARY KEY,
  user_id uuid,
  CONSTRAINT "fk-user->session"
    FOREIGN KEY(user_id)
    REFERENCES users (id)
)"
`;

exports[`pretty: pretty/tables-13.sql 1`] = `
"CREATE TABLE public."API Keys" (
  "KeyID" uuid PRIMARY KEY,
  "ClientName" text,
  "KeyValue" text UNIQUE,
  CONSTRAINT "Unique_ClientName" 
    UNIQUE ("ClientName")
)"
`;

exports[`pretty: pretty/tables-14.sql 1`] = `
"CREATE TABLE alerts (
  alert_id serial PRIMARY KEY,
  level "AlertLevel" NOT NULL
)"
`;

exports[`pretty: pretty/tables-15.sql 1`] = `
"CREATE TABLE "Billing"."Invoices" (
  invoice_id uuid PRIMARY KEY,
  "Client ID" uuid,
  CONSTRAINT "FK_Client"
    FOREIGN KEY("Client ID")
    REFERENCES "Clients"."ClientBase" ("Client ID")
)"
`;

exports[`pretty: pretty/tables-16.sql 1`] = `
"CREATE TABLE media.assets (
  id uuid PRIMARY KEY,
  url text,
  CONSTRAINT "Check-URL-NonEmpty" 
    CHECK (url <> '')
)"
`;

exports[`pretty: pretty/tables-17.sql 1`] = `
"CREATE TABLE data.snapshots (
  id serial PRIMARY KEY,
  metadata jsonb,
  context address
)"
`;

exports[`pretty: pretty/tables-18.sql 1`] = `
"CREATE TABLE "x-Schema"."z-Table" (
  "Z-ID" int PRIMARY KEY,
  "Z-Name" text,
  CONSTRAINT "z-Name-Check" 
    CHECK ("Z-Name" ~ '^[A-Z]')
)"
`;

exports[`pretty: pretty/tables-19.sql 1`] = `
"CREATE TABLE users.details (
  first_name text NOT NULL,
  last_name text,
  CONSTRAINT first_name_required 
    CHECK (first_name <> '')
)"
`;

exports[`pretty: pretty/tables-20.sql 1`] = `
"CREATE TABLE "Calculated"."Metrics" (
  base int,
  adjustment int DEFAULT 0,
  "Total" int GENERATED ALWAYS AS (base + adjustment) STORED
)"
`;
