// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`non-pretty: pretty/triggers-1.sql 1`] = `"CREATE TRIGGER audit_insert_trigger AFTER INSERT ON public.users FOR EACH ROW EXECUTE FUNCTION log_user_insert ()"`;

exports[`non-pretty: pretty/triggers-2.sql 1`] = `"CREATE TRIGGER "AuditTrigger" AFTER DELETE ON "SensitiveData" FOR EACH ROW EXECUTE FUNCTION public.log_deletion ()"`;

exports[`non-pretty: pretty/triggers-3.sql 1`] = `"CREATE TRIGGER archive_if_inactive BEFORE UPDATE ON accounts FOR EACH ROW WHEN ( old.active = false ) EXECUTE FUNCTION "ArchiveFunction" ()"`;

exports[`non-pretty: pretty/triggers-4.sql 1`] = `"CREATE TRIGGER update_stats_on_change AFTER INSERT OR UPDATE ON metrics.stats FOR EACH ROW EXECUTE FUNCTION metrics.update_stats ( 'user', 'true' )"`;

exports[`non-pretty: pretty/triggers-5.sql 1`] = `"CREATE TRIGGER "TrickyTrigger" BEFORE DELETE ON "weirdSchema"."ComplexTable" FOR EACH ROW WHEN ( old.status = 'pending' ) EXECUTE FUNCTION "weirdSchema"."ComplexFn" ( 'arg1', '42' )"`;

exports[`non-pretty: pretty/triggers-6.sql 1`] = `"CREATE TRIGGER user_activity_log AFTER INSERT OR DELETE OR UPDATE ON users FOR EACH ROW EXECUTE FUNCTION audit.activity_log ()"`;

exports[`non-pretty: pretty/triggers-7.sql 1`] = `"CREATE TRIGGER no_schema BEFORE INSERT ON log_table FOR EACH ROW EXECUTE FUNCTION update_log ()"`;

exports[`non-pretty: pretty/triggers-8.sql 1`] = `"CREATE TRIGGER flag_special_updates AFTER UPDATE ON profiles FOR EACH ROW WHEN ( new."accessLevel" = 'admin' ) EXECUTE FUNCTION flag_admin_change ()"`;

exports[`non-pretty: pretty/triggers-9.sql 1`] = `"CREATE TRIGGER "TriggerMixedCase" BEFORE INSERT ON datapoints FOR EACH ROW EXECUTE FUNCTION "HandleInsert" ( 'TYPE_A', 'Region-1' )"`;

exports[`non-pretty: pretty/triggers-10.sql 1`] = `"CREATE TRIGGER cascade_on_partition AFTER DELETE ON events_log_partition FOR EACH ROW EXECUTE FUNCTION propagate_deletion ()"`;

exports[`pretty: pretty/triggers-1.sql 1`] = `
"CREATE TRIGGER audit_insert_trigger
  AFTER INSERT
  ON public.users
  FOR EACH ROW
  EXECUTE PROCEDURE log_user_insert()"
`;

exports[`pretty: pretty/triggers-2.sql 1`] = `
"CREATE TRIGGER "AuditTrigger"
  AFTER DELETE
  ON "SensitiveData"
  FOR EACH ROW
  EXECUTE PROCEDURE public.log_deletion()"
`;

exports[`pretty: pretty/triggers-3.sql 1`] = `
"CREATE TRIGGER archive_if_inactive
  BEFORE UPDATE
  ON accounts
  FOR EACH ROW
  WHEN (old.active = false)
  EXECUTE PROCEDURE "ArchiveFunction"()"
`;

exports[`pretty: pretty/triggers-4.sql 1`] = `
"CREATE TRIGGER update_stats_on_change
  AFTER INSERT OR UPDATE
  ON metrics.stats
  FOR EACH ROW
  EXECUTE PROCEDURE metrics.update_stats('user', 'true')"
`;

exports[`pretty: pretty/triggers-5.sql 1`] = `
"CREATE TRIGGER "TrickyTrigger"
  BEFORE DELETE
  ON "weirdSchema"."ComplexTable"
  FOR EACH ROW
  WHEN (old.status = 'pending')
  EXECUTE PROCEDURE "weirdSchema"."ComplexFn"('arg1', '42')"
`;

exports[`pretty: pretty/triggers-6.sql 1`] = `
"CREATE TRIGGER user_activity_log
  AFTER INSERT OR DELETE OR UPDATE
  ON users
  FOR EACH ROW
  EXECUTE PROCEDURE audit.activity_log()"
`;

exports[`pretty: pretty/triggers-7.sql 1`] = `
"CREATE TRIGGER no_schema
  BEFORE INSERT
  ON log_table
  FOR EACH ROW
  EXECUTE PROCEDURE update_log()"
`;

exports[`pretty: pretty/triggers-8.sql 1`] = `
"CREATE TRIGGER flag_special_updates
  AFTER UPDATE
  ON profiles
  FOR EACH ROW
  WHEN (new."accessLevel" = 'admin')
  EXECUTE PROCEDURE flag_admin_change()"
`;

exports[`pretty: pretty/triggers-9.sql 1`] = `
"CREATE TRIGGER "TriggerMixedCase"
  BEFORE INSERT
  ON datapoints
  FOR EACH ROW
  EXECUTE PROCEDURE "HandleInsert"('TYPE_A', 'Region-1')"
`;

exports[`pretty: pretty/triggers-10.sql 1`] = `
"CREATE TRIGGER cascade_on_partition
  AFTER DELETE
  ON events_log_partition
  FOR EACH ROW
  EXECUTE PROCEDURE propagate_deletion()"
`;
