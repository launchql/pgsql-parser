import { Type } from '@launchql/protobufjs';
import * as t from '@babel/types';
import { PgProtoParserOptions } from '../../options';
export declare const generateTypeImports: (types: Type[], source: string, suffix?: string) => t.ImportDeclaration;
export declare const generateAstHelperMethods: (types: Type[], isWrappedTypeFn: (typeName: string) => boolean) => t.ExportDefaultDeclaration;
export declare const generateNodeUnionType: (options: PgProtoParserOptions, types: Type[]) => t.ExportNamedDeclaration;
export declare const generateNodeUnionTypeObjectKeys: (types: Type[]) => t.ExportNamedDeclaration;
export declare const convertTypeToTsInterface: (type: Type, options: PgProtoParserOptions) => t.ExportNamedDeclaration;
export declare const convertTypeToWrappedTsInterface: (type: Type, options: PgProtoParserOptions, isWrappedTypeFn: (typeName: string) => boolean) => t.ExportNamedDeclaration;
export declare const generateTypeImportSpecifiers: (types: Type[], options: PgProtoParserOptions) => t.ImportDeclaration;
